CREATE DATABASE IF NOT EXISTS oohjinDanceAcademy_DB;
USE oohjinDanceAcademy_DB;

CREATE TABLE IF NOT EXISTS ADMIN (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USERNAME VARCHAR(50) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO ADMIN (USERNAME, PASSWORD) 
VALUES ('woody', '$2b$10$qrLTVzFVi0qYOh9FI1rvou5QzmoyB2yLLjwQxMktPuqIGBRhWRCN.')
ON DUPLICATE KEY UPDATE USERNAME = VALUES(USERNAME);

/* INSTRUCTOR TABLE */
CREATE TABLE IF NOT EXISTS INSTRUCTORS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(50) NOT NULL,
    PHONE VARCHAR(20)
);

/* MEMBER TABLE */
CREATE TABLE IF NOT EXISTS MEMBERS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(50) NOT NULL,
    GENDER VARCHAR(10) NOT NULL,
    AGE INT NOT NULL,
    BIRTHDATE DATE,
    ADDRESS TEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PHONE VARCHAR(20) NOT NULL
);

/* PROGRAM INFO TABLE */
CREATE TABLE IF NOT EXISTS PROGRAMS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    INSTRUCTOR_ID INT,
    PRICE INT NOT NULL,
    FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTORS(ID)
);

/* REGISTER INFO TABLE */
CREATE TABLE IF NOT EXISTS ENROLLMENTS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    MEMBER_ID INT NOT NULL,
    PROGRAM_ID INT NOT NULL,
    DURATION_MONTHS INT NOT NULL,
    REMAINING_DAYS INT NOT NULL,
    PAYMENT_STATUS ENUM('PAID', 'UNPAID') NOT NULL,
    START_DATE DATE NOT NULL,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBERS(ID),
    FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAMS(ID)
);

/* ATTENDANCE TABLE */
CREATE TABLE IF NOT EXISTS ATTENDANCE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ENROLLMENT_ID INT NOT NULL,
    ATTENDANCE_DATE DATE NOT NULL,
    FOREIGN KEY (ENROLLMENT_ID) REFERENCES ENROLLMENTS(ID)
);

INSERT INTO INSTRUCTORS (NAME, PHONE) VALUES 
('박현운', '010-1234-5678'),
('임수연', '010-2345-6789');

INSERT INTO PROGRAMS (NAME, INSTRUCTOR_ID, PRICE) VALUES 
('FITHOP', 1, 150000),
('ALL K-POP A', 2, 150000);